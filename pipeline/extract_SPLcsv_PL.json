{
	"name": "extract_SPLcsv_PL",
	"properties": {
		"activities": [
			{
				"name": "CSVtoParquet_SPL",
				"type": "Copy",
				"dependsOn": [],
				"policy": {
					"timeout": "0.00:10:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "DelimitedTextSource",
						"storeSettings": {
							"type": "AzureBlobStorageReadSettings",
							"recursive": true,
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "DelimitedTextReadSettings"
						}
					},
					"sink": {
						"type": "ParquetSink",
						"storeSettings": {
							"type": "AzureBlobStorageWriteSettings"
						},
						"formatSettings": {
							"type": "ParquetWriteSettings"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "License Issue Date",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "License_Issue_Date",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "License Number",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "License_Number",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "Animal's Name",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "Animals_Name",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "Species",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "Species",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "Primary Breed",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "Primary_Breed",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "Secondary Breed",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "Secondary_Breed",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "ZIP Code",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "ZipCode",
									"physicalType": "UTF8"
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "spl_ds_csv",
						"type": "DatasetReference",
						"parameters": {
							"container": {
								"value": "@pipeline().parameters.container",
								"type": "Expression"
							},
							"directory": {
								"value": "@pipeline().parameters.src_directory",
								"type": "Expression"
							},
							"filename": {
								"value": "@concat(\n    pipeline().parameters.spl_file,\n    '.csv'\n)",
								"type": "Expression"
							}
						}
					}
				],
				"outputs": [
					{
						"referenceName": "spl_ds_parquet",
						"type": "DatasetReference",
						"parameters": {
							"container": {
								"value": "@pipeline().parameters.container",
								"type": "Expression"
							},
							"directory": {
								"value": "@pipeline().parameters.sink_directory",
								"type": "Expression"
							},
							"filename": {
								"value": "@concat(\n    pipeline().parameters.spl_parquet,\n    '.parquet'\n)",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "CSVtoParquet_GEO",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "CSVtoParquet_SPL",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.00:10:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "DelimitedTextSource",
						"storeSettings": {
							"type": "AzureBlobStorageReadSettings",
							"recursive": true,
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "DelimitedTextReadSettings"
						}
					},
					"sink": {
						"type": "ParquetSink",
						"storeSettings": {
							"type": "AzureBlobStorageWriteSettings"
						},
						"formatSettings": {
							"type": "ParquetWriteSettings"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "state_fips",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "StateFIPS",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "state",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "State",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "state_abbr",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "State_ABBR",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "zipcode",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "ZipCode",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "county",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "County",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "city",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "City",
									"physicalType": "UTF8"
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "spl_ds_csv",
						"type": "DatasetReference",
						"parameters": {
							"container": {
								"value": "@pipeline().parameters.container",
								"type": "Expression"
							},
							"directory": {
								"value": "@pipeline().parameters.src_directory",
								"type": "Expression"
							},
							"filename": {
								"value": "@concat(\n    pipeline().parameters.loc_file,\n    '.csv'\n)",
								"type": "Expression"
							}
						}
					}
				],
				"outputs": [
					{
						"referenceName": "spl_ds_parquet",
						"type": "DatasetReference",
						"parameters": {
							"container": {
								"value": "@pipeline().parameters.container",
								"type": "Expression"
							},
							"directory": {
								"value": "@pipeline().parameters.sink_directory",
								"type": "Expression"
							},
							"filename": {
								"value": "@concat(\n    pipeline().parameters.loc_parquet,\n    '.parquet'\n)",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "Parquet_to_Snowflake_STAGE",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "CSVtoParquet_GEO",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@pipeline().parameters.stage_array",
						"type": "Expression"
					},
					"batchCount": 2,
					"activities": [
						{
							"name": "stage_Snowflake_STAGE_DF",
							"type": "ExecuteDataFlow",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataflow": {
									"referenceName": "stage_Snowflake_STAGE_DF",
									"type": "DataFlowReference",
									"datasetParameters": {
										"sourceParquet": {
											"container": {
												"value": "@pipeline().parameters.container",
												"type": "Expression"
											},
											"directory": {
												"value": "@pipeline().parameters.sink_directory",
												"type": "Expression"
											},
											"filename": {
												"value": "@concat(\n    item(),\n    '.parquet'\n)",
												"type": "Expression"
											}
										},
										"sinkSnowflakeSTAGE": {
											"schema_name": {
												"value": "@pipeline().parameters.stage_schema",
												"type": "Expression"
											},
											"table_name": {
												"value": "@toUpper(\n    item()\n)",
												"type": "Expression"
											}
										}
									}
								},
								"compute": {
									"coreCount": 8,
									"computeType": "General"
								},
								"traceLevel": "Fine"
							}
						}
					]
				}
			},
			{
				"name": "transform_LOCATION_DF",
				"type": "ExecuteDataFlow",
				"dependsOn": [
					{
						"activity": "Parquet_to_Snowflake_STAGE",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataflow": {
						"referenceName": "transform_LOCATION_DF",
						"type": "DataFlowReference",
						"datasetParameters": {
							"sourceLocation": {
								"schema_name": {
									"value": "@pipeline().parameters.stage_schema",
									"type": "Expression"
								},
								"table_name": {
									"value": "@pipeline().parameters.loc_parquet",
									"type": "Expression"
								}
							},
							"sourceLocationDIM": {
								"schema_name": {
									"value": "@pipeline().parameters.wh_schema",
									"type": "Expression"
								},
								"table_name": {
									"value": "@pipeline().parameters.wh_loc_dim",
									"type": "Expression"
								}
							},
							"sinkLocation": {
								"schema_name": {
									"value": "@pipeline().parameters.wh_schema",
									"type": "Expression"
								},
								"table_name": {
									"value": "@pipeline().parameters.wh_loc_dim",
									"type": "Expression"
								}
							}
						}
					},
					"compute": {
						"coreCount": 8,
						"computeType": "General"
					},
					"traceLevel": "Fine"
				}
			}
		],
		"parameters": {
			"container": {
				"type": "String",
				"defaultValue": "seattlepetlicensecsv"
			},
			"src_directory": {
				"type": "String",
				"defaultValue": "csv"
			},
			"sink_directory": {
				"type": "String",
				"defaultValue": "parquet"
			},
			"spl_file": {
				"type": "string",
				"defaultValue": "Seattle_Pet_Licenses"
			},
			"loc_file": {
				"type": "string",
				"defaultValue": "geo-data"
			},
			"spl_parquet": {
				"type": "string",
				"defaultValue": "STG_PET_LICENSE"
			},
			"loc_parquet": {
				"type": "string",
				"defaultValue": "STG_LOCATION"
			},
			"stage_array": {
				"type": "array",
				"defaultValue": [
					"STG_PET_LICENSE",
					"STG_LOCATION"
				]
			},
			"stage_schema": {
				"type": "string",
				"defaultValue": "STAGE"
			},
			"wh_schema": {
				"type": "string",
				"defaultValue": "DW"
			},
			"wh_loc_dim": {
				"type": "string",
				"defaultValue": "DIM_LOCATION"
			}
		},
		"annotations": []
	}
}